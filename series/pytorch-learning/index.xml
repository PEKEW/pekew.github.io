<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pytorch Learning on PeiKeWang&#39;s WebSite</title>
    <link>/series/pytorch-learning/</link>
    <description>Recent content in Pytorch Learning on PeiKeWang&#39;s WebSite</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; 2022&lt;/a&gt;
</copyright>
    <lastBuildDate>Wed, 17 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="/series/pytorch-learning/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>在Pytorch中慎用list</title>
      <link>/posts/%E5%9C%A8pytroch%E4%B8%AD%E6%85%8E%E7%94%A8list/</link>
      <pubDate>Wed, 17 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/%E5%9C%A8pytroch%E4%B8%AD%E6%85%8E%E7%94%A8list/</guid>
      <description>&lt;h2 id=&#34;问题背景&#34;&gt;问题背景&lt;/h2&gt;
&lt;p&gt;在自定义的模型参数需要被优化的时候，需要给优化器传入一个可迭代对象，一般情况下，可以通过把自定义的参数注册为&lt;code&gt;torch.nn.Parameter&lt;/code&gt;类，直接和模型本身的参数一起通过&lt;code&gt;model.parameters()&lt;/code&gt;返回。但如果需要把自定义参数和模型参数单独优化时，就需要单独返回一个可迭代的参数对象，且不能为&lt;code&gt;torch.nn.Parameter&lt;/code&gt;类，因为&lt;code&gt;torch.nn.Parameter&lt;/code&gt;会把自定义参数当做模型参数一起注册到模型的参数字典中，常用的做法是将自定义的参数定义为&lt;code&gt;Variable&lt;/code&gt;类，并在模型实现时单独实现返回自定义参数迭代对象的方法，常用的返回一个迭代对象的方法有:&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
